# 🌾 نظام إدارة المزرعة - Farm Management System

نظام ويب متكامل لإدارة المزارع الزراعية والرعوية، يشمل متابعة الأراضي، المشاريع، القطيع، المالية، والمخزون.

## 📋 المحتويات

- [المميزات](#المميزات)
- [التقنيات المستخدمة](#التقنيات-المستخدمة)
- [التثبيت والإعداد](#التثبيت-والإعداد)
- [إعداد قاعدة البيانات](#إعداد-قاعدة-البيانات)
- [النشر على الإنترنت](#النشر-على-الإنترنت)
- [دليل الاستخدام](#دليل-الاستخدام)
- [الصلاحيات](#الصلاحيات)
- [التطوير المستقبلي](#التطوير-المستقبلي)

---

## ✨ المميزات

### الوظائف الحالية
- ✅ **لوحة تحكم شاملة**: عرض إحصائيات المزرعة في لمحة واحدة
- ✅ **إدارة الأراضي**: تسجيل الأراضي المملوكة والمستأجرة
- ✅ **إدارة المشاريع**: متابعة المشاريع الزراعية والرعوية
- ✅ **إدارة القطيع**: سجل كامل للحيوانات مع التفاصيل
- ✅ **السجلات الصحية**: متابعة اللقاحات والأمراض والعلاجات
- ✅ **سجل الولادات**: تسجيل التلقيح والولادات
- ✅ **التغذية اليومية**: متابعة استهلاك الأعلاف يومياً
- ✅ **الإدارة المالية**: مصاريف، مبيعات، وحساب الأرباح
- ✅ **إدارة المخزون**: متابعة مخزون الأعلاف والمواد
- ✅ **إدارة المعدات**: سجل المعدات والبنية التحتية
- ✅ **تصدير/استيراد CSV**: نقل البيانات بسهولة
- ✅ **واجهة متجاوبة**: تعمل على الحاسوب والموبايل

### قادم قريباً
- 🔄 نظام تنبيهات تلقائية (مواعيد تطعيم، مخزون منخفض)
- 🔄 تقارير مالية تفصيلية
- 🔄 تكاملات مع حساسات IoT
- 🔄 تطبيق موبايل (React Native)

---

## 🛠 التقنيات المستخدمة

- **Frontend**: HTML5 + CSS3 + Vanilla JavaScript
- **قاعدة البيانات**: Supabase (PostgreSQL)
- **الخطوط**: Google Fonts (Cairo)
- **الاستضافة**: Netlify / Vercel / GitHub Pages

---

## 🚀 التثبيت والإعداد

### المتطلبات
- متصفح حديث (Chrome, Firefox, Safari, Edge)
- حساب Supabase مجاني (اختياري، يمكن العمل بدون قاعدة بيانات)
- محرر نصوص (VS Code, Sublime Text)

### خطوات التثبيت المحلي

#### 1. تحميل الملفات
```bash
# إنشاء مجلد المشروع
mkdir farm-management
cd farm-management

# حفظ ملف index.html الذي تم إنشاؤه
```

#### 2. تشغيل المشروع محلياً

**الطريقة الثانية: استخدام Live Server (مفضل)**
```bash
# إذا كان لديك VS Code
# ثبت إضافة Live Server
# ثم انقر بالزر الأيمن على index.html واختر "Open with Live Server"
```

---

## 🗄 إعداد قاعدة البيانات (Supabase)

### الخطوة 1: إنشاء حساب Supabase

1. اذهب إلى [supabase.com](https://supabase.com)
2. اضغط **Start your project**
3. سجل دخول بحساب GitHub
4. اضغط **New Project**

### الخطوة 2: إعداد المشروع

1. اختر اسم المشروع (مثل: `farm-management`)
2. اختر كلمة مرور قوية لقاعدة البيانات
3. اختر المنطقة الأقرب إليك (Europe West)
4. اضغط **Create new project**
5. انتظر دقيقتين حتى يتم إنشاء المشروع

### الخطوة 3: تنفيذ SQL Schema

1. من القائمة الجانبية، اختر **SQL Editor**
2. اضغط **+ New query**
3. انسخ محتوى ملف `supabase-schema.sql` بالكامل
4. الصقه في محرر SQL
5. اضغط **Run** (أو Ctrl+Enter)
6. انتظر حتى تظهر رسالة **Success**

### الخطوة 4: الحصول على مفاتيح API

1. من القائمة الجانبية، اختر **Settings** → **API**
2. ستجد:
   - **Project URL**: انسخه (مثل: `https://xxxxx.supabase.co`)
   - **anon/public key**: انسخه (مفتاح طويل يبدأ بـ eyJ...)

### الخطوة 5: ربط المفاتيح بالموقع

افتح ملف `index.html` وابحث عن هذا القسم:

```javascript
// ============================================
// إعدادات Supabase - ضع مفاتيحك هنا
// ============================================
const SUPABASE_URL = 'YOUR_SUPABASE_URL'; // ضع الرابط هنا
const SUPABASE_KEY = 'YOUR_SUPABASE_ANON_KEY'; // ضع المفتاح هنا
```

استبدل القيم:
```javascript
const SUPABASE_URL = 'https://xxxxx.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...';
```

احفظ الملف وأعد تحميل الصفحة!

### الخطوة 6: تفعيل Row Level Security (اختياري)

إذا كنت تريد نظام صلاحيات:

1. اذهب إلى **Authentication** → **Providers**
2. فعّل **Email** provider
3. ارجع إلى SQL Editor ونفذ:

```sql
-- إنشاء مستخدم تجريبي
INSERT INTO auth.users (email, encrypted_password, email_confirmed_at)
VALUES (
  'admin@farm.com',
  crypt('password123', gen_salt('bf')),
  NOW()
);
```

---

## 🌐 النشر على الإنترنت

### الطريقة 1: Netlify (سهلة وسريعة)

#### عبر Netlify Drop
1. اذهب إلى [netlify.com/drop](https://app.netlify.com/drop)
2. اسحب مجلد المشروع إلى الصفحة
3. سيتم رفعه تلقائياً وستحصل على رابط مثل: `https://your-site.netlify.app`

#### عبر GitHub
```bash
# 1. إنشاء repository جديد على GitHub
# 2. رفع الملفات
git init
git add .
git commit -m "Initial commit"
git branch -M main
git remote add origin https://github.com/username/farm-management.git
git push -u origin main

# 3. ربط Netlify بـ GitHub
# اذهب إلى netlify.com → New site from Git
# اختر repository الخاص بك
# اضغط Deploy
```

### الطريقة 2: Vercel

```bash
# تثبيت Vercel CLI
npm i -g vercel

# النشر
cd farm-management
vercel

# اتبع التعليمات على الشاشة
```

### الطريقة 3: GitHub Pages

```bash
# 1. ادفع الكود إلى GitHub
# 2. اذهب إلى Settings → Pages
# 3. اختر branch: main
# 4. احفظ
# سيكون الموقع متاحاً على: https://username.github.io/farm-management
```

---

## 📖 دليل الاستخدام

### البدء السريع

1. **افتح الموقع** واختر أي قسم من القائمة الجانبية
2. **لإضافة بيانات**: اضغط زر "+ إضافة" في أي صفحة
3. **للتعديل**: اضغط "تعديل" بجانب أي سجل
4. **للحذف**: اضغط "حذف" (سيطلب تأكيد)
5. **للتصدير**: اضغط "تصدير CSV" لتحميل البيانات

### الأقسام الرئيسية

#### 📊 لوحة التحكم
- عرض إحصائيات شاملة عن المزرعة
- تنبيهات المواعيد المهمة
- ملخص مالي سريع

#### 🏞️ الأراضي والمشاريع
- تسجيل الأراضي المملوكة والمستأجرة
- إضافة مشاريع زراعية ورعوية
- ربط المشاريع بالأراضي

#### 🐑 القطيع
- تسجيل كل حيوان برقم تعريف
- متابعة النعاج، الحملان، والكباش
- سجل كامل لكل حيوان

#### 💊 السجلات الصحية
- تسجيل اللقاحات والأمراض
- متابعة العلاجات
- تواريخ الفحوصات الدورية

#### 🍼 الولادات
- تسجيل التلقيح والتاريخ المتوقع
- تسجيل الولادات الفعلية
- متابعة عدد المواليد والوزن

#### 🌾 التغذية اليومية
- تسجيل استهلاك الأعلاف يومياً
- حساب متوسط الاستهلاك
- متابعة التكاليف

#### 💰 المالية
- تسجيل جميع المصاريف
- تسجيل المبيعات
- حساب الأرباح/الخسائر تلقائياً
- إدارة القروض والديون

#### 📦 المخزون
- متابعة مخزون الأعلاف
- تنبيهات عند انخفاض المخزون
- سجل المواد والأدوات

#### 🚜 المعدات
- سجل جميع المعدات والآليات
- متابعة حالة المعدات
- تواريخ الصيانة

---

## 🔐 الصلاحيات

### أنواع المستخدمين

#### 1. Admin (المدير)
- **الصلاحيات**: وصول كامل لجميع الوظائف
- **يستطيع**: إضافة، تعديل، حذف أي بيانات
- **يستطيع**: إدارة المستخدمين

#### 2. Manager (مدير مشروع)
- **الصلاحيات**: إدارة المشاريع المخصصة له
- **يستطيع**: إضافة وتعديل بيانات مشاريعه
- **لا يستطيع**: حذف مشاريع أو الوصول لمشاريع غيره

#### 3. Data Entry (إدخال بيانات)
- **الصلاحيات**: إدخال البيانات فقط
- **يستطيع**: إضافة سجلات (تغذية، مصاريف، ولادات)
- **لا يستطيع**: تعديل أو حذف البيانات

### تغيير صلاحية مستخدم

```sql
-- في Supabase SQL Editor
UPDATE users 
SET role = 'manager' 
WHERE email = 'user@example.com';
```

---

## 📊 تصدير واستيراد البيانات

### تصدير إلى CSV
1. افتح أي قسم (مثلاً: الأراضي)
2. اضغط زر "تصدير CSV"
3. سيتم تحميل ملف CSV بجميع البيانات

### استيراد من CSV
```javascript
// قريباً: سيتم إضافة وظيفة استيراد CSV
// حالياً يمكن الاستيراد مباشرة عبر Supabase Dashboard
```

---

## 🔧 التخصيص والتطوير

### تغيير الألوان

ابحث في ملف `index.html` عن:
```css
.header {
    background: linear-gradient(135deg, #2d5016 0%, #4a7c2a 100%);
}
```

غيّر الألوان حسب رغبتك:
```css
.header {
    background: linear-gradient(135deg, #1a472a 0%, #2e7d32 100%);
}
```

### إضافة حقول جديدة

1. أضف حقل في قاعدة البيانات:
```sql
ALTER TABLE animals 
ADD COLUMN purchase_price DECIMAL(10,2);
```

2. أضف عمود في الجدول في HTML:
```html
<th>سعر الشراء</th>
```

3. أضف البيانات في JavaScript:
```javascript
<td>${animal.purchase_price || '-'}</td>
```

---

## 🌟 التطوير المستقبلي

### المرحلة القادمة
- [ ] نظام تنبيهات SMS/Email
- [ ] تقارير PDF قابلة للطباعة
- [ ] رسوم بيانية تفاعلية (Charts)
- [ ] تكامل مع Google Calendar للمواعيد
- [ ] تطبيق موبايل (React Native)

### تكاملات مستقبلية
- [ ] قراءة بيانات من مستشعرات IoT
- [ ] كاميرات مراقبة
- [ ] قياس رطوبة التربة
- [ ] تتبع GPS للحيوانات
- [ ] نظام توصيات ذكي بالـ AI

---

## ❓ الأسئلة الشائعة

### هل يمكن استخدام النظام بدون إنترنت؟
نعم، يمكن تشغيله محلياً بدون قاعدة بيانات. لكن البيانات ستُفقد عند إغلاق المتصفح.

### هل النظام مجاني؟
نعم، النظام مجاني بالكامل. Supabase يوفر خطة مجانية كافية للاستخدام الشخصي.

### كيف أؤمّن بياناتي؟
- استخدم كلمة مرور قوية لـ Supabase
- لا تشارك مفاتيح API مع أحد
- فعّل Row Level Security
- احتفظ بنسخ احتياطية دورية (تصدير CSV)

### هل يمكن استخدامه لعدة مزارع؟
نعم! أضف حقل `farm_id` في الجداول وأنشئ جدول `farms` لإدارة عدة مزارع.

---

## 📞 الدعم والمساعدة

### موارد مفيدة
- [توثيق Supabase](https://supabase.com/docs)
- [دروس JavaScript](https://javascript.info/)
- [MDN Web Docs](https://developer.mozilla.org/)

### تواصل
- لأي مشاكل تقنية: افتح issue على GitHub
- لاقتراحات التحسين: مرحباً بها!

---

## 📝 الترخيص

هذا المشروع مفتوح المصدر ومتاح للاستخدام الشخصي والتجاري.

---

## 🙏 شكر خاص

تم بناء هذا النظام باستخدام:
- Supabase - Backend as a Service
- Google Fonts - خط Cairo الجميل
- جميع المزارعين الذين يعملون بجد لإطعام العالم 🌾

---

**نتمنى لك تجربة ممتعة ومزرعة ناجحة! 🌱**

